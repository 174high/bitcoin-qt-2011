#############################################################################
# Makefile for building: bitcoin_qt
# Generated by qmake (2.01a) (Qt 4.8.6) on: ?? 6? 30 14:28:19 2018
# Project:  bitcoin_qt.pro
# Template: app
# Command: /usr/lib/x86_64-linux-gnu/qt4/bin/qmake -o Makefile bitcoin_qt.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_GUI -DDEBUG_NET -DDEBUG_IRC -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -O2 -D_REENTRANT -Wall -W $(DEFINES)
CXXFLAGS      = -m64 -pipe -O2 -D_REENTRANT -Wall -W $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -Icryptopp -I.
LINK          = g++
LFLAGS        = -m64 -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -ldb_cxx -lcrypto -lboost_filesystem -lboost_system -lboost_thread -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/lib/x86_64-linux-gnu/qt4/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		irc.cpp \
		net.cpp \
		db.cpp \
		util.cpp \
		cryptopp/sha.cpp \
		cryptopp/cpu.cpp 
OBJECTS       = main.o \
		irc.o \
		net.o \
		db.o \
		util.o \
		sha.o \
		cpu.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		bitcoin_qt.pro
QMAKE_TARGET  = bitcoin_qt
DESTDIR       = 
TARGET        = bitcoin_qt

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: bitcoin_qt.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtGui.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile bitcoin_qt.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/shared.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtGui.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile bitcoin_qt.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/bitcoin_qt1.0.0 || $(MKDIR) .tmp/bitcoin_qt1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/bitcoin_qt1.0.0/ && $(COPY_FILE) --parents serialize.h headers.h irc.h net.h db.h util.h main.h uint256.h bignum.h base58.h cryptopp/stdcpp.h cryptopp/smartptr.h cryptopp/simple.h cryptopp/sha.h cryptopp/secblock.h cryptopp/pch.h cryptopp/misc.h cryptopp/iterhash.h cryptopp/cryptlib.h cryptopp/cpu.h cryptopp/config.h .tmp/bitcoin_qt1.0.0/ && $(COPY_FILE) --parents main.cpp irc.cpp net.cpp db.cpp util.cpp cryptopp/sha.cpp cryptopp/cpu.cpp .tmp/bitcoin_qt1.0.0/ && $(COPY_FILE) --parents hellotr_la.ts .tmp/bitcoin_qt1.0.0/ && (cd `dirname .tmp/bitcoin_qt1.0.0` && $(TAR) bitcoin_qt1.0.0.tar bitcoin_qt1.0.0 && $(COMPRESS) bitcoin_qt1.0.0.tar) && $(MOVE) `dirname .tmp/bitcoin_qt1.0.0`/bitcoin_qt1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/bitcoin_qt1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

main.o: main.cpp util.h \
		uint256.h \
		serialize.h \
		net.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

irc.o: irc.cpp uint256.h \
		serialize.h \
		util.h \
		net.h \
		db.h \
		base58.h \
		bignum.h \
		strlcpy.h \
		main.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o irc.o irc.cpp

net.o: net.cpp headers.h \
		serialize.h \
		uint256.h \
		util.h \
		bignum.h \
		base58.h \
		main.h \
		irc.h \
		net.h \
		db.h \
		strlcpy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o net.o net.cpp

db.o: db.cpp bignum.h \
		util.h \
		uint256.h \
		serialize.h \
		net.h \
		db.h \
		main.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o db.o db.cpp

util.o: util.cpp util.h \
		uint256.h \
		serialize.h \
		strlcpy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o util.o util.cpp

sha.o: cryptopp/sha.cpp cryptopp/pch.h \
		cryptopp/cpu.h \
		cryptopp/config.h \
		cryptopp/simple.h \
		cryptopp/secblock.h \
		cryptopp/misc.h \
		cryptopp/cryptlib.h \
		cryptopp/stdcpp.h \
		cryptopp/smartptr.h \
		cryptopp/sha.h \
		cryptopp/iterhash.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sha.o cryptopp/sha.cpp

cpu.o: cryptopp/cpu.cpp cryptopp/pch.h \
		cryptopp/cpu.h \
		cryptopp/config.h \
		cryptopp/simple.h \
		cryptopp/secblock.h \
		cryptopp/misc.h \
		cryptopp/cryptlib.h \
		cryptopp/stdcpp.h \
		cryptopp/smartptr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cpu.o cryptopp/cpu.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

